"""Add is_system column to permission table

Revision ID: c8368fa169ad
Revises: 25a34df36c59
Create Date: 2025-05-26 00:43:43.946704

"""
from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'c8368fa169ad'
down_revision: str | None = '25a34df36c59'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add the column with a default value first
    op.add_column('permission', sa.Column('is_system', sa.Boolean(), nullable=True, default=False))

    # Update existing permissions to set is_system = True for system permissions
    op.execute("""
        UPDATE permission 
        SET is_system = TRUE 
        WHERE name IN (
            'user:read', 'user:create', 'user:update', 'user:delete',
            'role:read', 'role:create', 'role:update', 'role:delete',
            'permission:read', 'permission:create', 'permission:update', 'permission:delete',
            'system:admin', 'system:monitor'
        )
    """)

    # Update all other permissions to set is_system = False
    op.execute("UPDATE permission SET is_system = FALSE WHERE is_system IS NULL")

    # Now make the column non-nullable
    op.alter_column('permission', 'is_system', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('permission', 'is_system')
    # ### end Alembic commands ###
